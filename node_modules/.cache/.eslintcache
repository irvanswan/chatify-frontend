[{"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\index.js":"1","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\App.js":"2","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\reportWebVitals.js":"3","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\store.js":"4","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\index.js":"5","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\index.js":"6","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Public\\index.js":"7","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Reducers\\index.js":"8","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\Route\\index.js":"9","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\CallHistory\\index.js":"10","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Public\\Login\\index.js":"11","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\index.js":"12","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Public\\NotFound\\index.js":"13","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Public\\Register\\index.js":"14","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Public\\ForgotPassword\\index.js":"15","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Reducers\\users.js":"16","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Reducers\\chatlist.js":"17","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Reducers\\message.js":"18","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\Route\\privateRoute.js":"19","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\Route\\publicRoute.js":"20","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\part.js":"21","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Actions\\auth.js":"22","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\index.js":"23","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\Filter\\index.js":"24","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\Message\\index.js":"25","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\List\\index.js":"26","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\Message\\startmessage.js":"27","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\Message\\message.js":"28","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Actions\\chatlist.js":"29","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Actions\\message.js":"30","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Actions\\user.js":"31","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\SplashScreen\\index.js":"32","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\SideBar\\index.js":"33","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\SideBar\\menu.js":"34","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\helper\\socket.js":"35"},{"size":341,"mtime":1619695472376,"results":"36","hashOfConfig":"37"},{"size":1382,"mtime":1630247765204,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":643,"mtime":1619696969485,"results":"40","hashOfConfig":"37"},{"size":117,"mtime":1630247826730,"results":"41","hashOfConfig":"37"},{"size":109,"mtime":1620038533053,"results":"42","hashOfConfig":"37"},{"size":206,"mtime":1630247777843,"results":"43","hashOfConfig":"37"},{"size":349,"mtime":1630383164075,"results":"44","hashOfConfig":"37"},{"size":120,"mtime":1618823164115,"results":"45","hashOfConfig":"37"},{"size":1427,"mtime":1620030978089,"results":"46","hashOfConfig":"37"},{"size":3815,"mtime":1630387976874,"results":"47","hashOfConfig":"37"},{"size":3515,"mtime":1630383519331,"results":"48","hashOfConfig":"37"},{"size":297,"mtime":1620029679482,"results":"49","hashOfConfig":"37"},{"size":4064,"mtime":1620188354251,"results":"50","hashOfConfig":"37"},{"size":1793,"mtime":1620030702136,"results":"51","hashOfConfig":"37"},{"size":2426,"mtime":1630383144104,"results":"52","hashOfConfig":"37"},{"size":628,"mtime":1619461299838,"results":"53","hashOfConfig":"37"},{"size":1372,"mtime":1619106908728,"results":"54","hashOfConfig":"37"},{"size":415,"mtime":1630247690861,"results":"55","hashOfConfig":"37"},{"size":432,"mtime":1619058036969,"results":"56","hashOfConfig":"37"},{"size":862,"mtime":1630251259120,"results":"57","hashOfConfig":"37"},{"size":1504,"mtime":1630383419991,"results":"58","hashOfConfig":"37"},{"size":159,"mtime":1630329783407,"results":"59","hashOfConfig":"37"},{"size":543,"mtime":1620032467572,"results":"60","hashOfConfig":"37"},{"size":651,"mtime":1619094915363,"results":"61","hashOfConfig":"37"},{"size":3420,"mtime":1619484892917,"results":"62","hashOfConfig":"37"},{"size":254,"mtime":1619271742338,"results":"63","hashOfConfig":"37"},{"size":11226,"mtime":1630859384377,"results":"64","hashOfConfig":"37"},{"size":710,"mtime":1619461289802,"results":"65","hashOfConfig":"37"},{"size":1772,"mtime":1620037950004,"results":"66","hashOfConfig":"37"},{"size":806,"mtime":1619382743048,"results":"67","hashOfConfig":"37"},{"size":371,"mtime":1630248008286,"results":"68","hashOfConfig":"37"},{"size":48,"mtime":1630329787637,"results":"69","hashOfConfig":"37"},{"size":927,"mtime":1630331711552,"results":"70","hashOfConfig":"37"},{"size":203,"mtime":1630837295818,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1p0tdiv",{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\index.js",[],["151","152"],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\App.js",["153"],"import {\n  BrowserRouter as Router, //router atau jalan ke arah mana\n  Switch, // cabang antar halaman\n  Route,\n} from \"react-router-dom\";\nimport {Login, Register, ForgotPassword, SplashScreen, NoPageFound} from './pages/Public'\nimport {Chatlist, CallHistory}  from './pages/Private'\nimport React from 'react'\nimport { PrivateRoute, PublicRoute} from \"./components\";\nimport { Provider } from 'react-redux'\nimport configureStore from './Redux/store'\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst {store, persistor} = configureStore()\n\n\nconst AppRouter = () =>{\n  return(\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/\" exact={true} component={()=><Chatlist />} />\n        <PrivateRoute path=\"/call-history\" exact={true} component={()=><CallHistory />} />\n        <PublicRoute path=\"/login\" restricted ={true} exact={true} component={()=><Login />} />\n        <PublicRoute path=\"/register\" restricted ={true} exact={true} component={()=><Register />} />\n        <PublicRoute path=\"/forgot-password\" restricted ={true} exact={true} component={()=><ForgotPassword />} />\n        <Route path=\"*\" component={NoPageFound} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default function App() {\n  return(\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <AppRouter />\n      </PersistGate>\n    </Provider>\n  )\n}","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\reportWebVitals.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\store.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Public\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Reducers\\index.js",["154"],"import { combineReducers } from 'redux'\r\nimport { UserLogin,GetInfoUser,UserRegister, UserLogout } from './users'\r\nimport { ChatList } from './chatlist'\r\nimport { GetMessage, SendMessage } from './message'\r\n\r\nconst reducers = combineReducers({\r\n    UserLogin, ChatList, GetMessage, SendMessage,GetInfoUser,UserRegister\r\n})\r\n\r\nexport default reducers","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\Route\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\CallHistory\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Public\\Login\\index.js",["155","156","157","158","159","160","161"],"import Part from '../../../components/part'\r\nimport {Link} from 'react-router-dom'\r\nimport React,{useState, useEffect} from 'react'\r\nimport { UserLogin } from '../../../Redux/Actions/auth'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SplashScreen from '../../../components/SplashScreen';\r\n\r\nconst Login = () =>{\r\n  const dispatch = useDispatch()\r\n  const [splash, setSplash] = useState(true)\r\n  const [show, setShow] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setSplash(false)\r\n    }, 5000);\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    const comp = document.getElementById(\"inputPassword\");\r\n    console.log(show);\r\n    if(show){\r\n      comp.type = \"text\";\r\n    }\r\n  },[show])\r\n\r\n  const [loginLoading, setLoginLoading] = useState(false)\r\n  const [formData, setFormData] = useState({\r\n    email: '-',\r\n    password: '-'\r\n  })\r\n  const { data,error } = useSelector((state)=> state.UserLogin)\r\n\r\n  const processLogin = (e)=>{\r\n    e.preventDefault()\r\n    dispatch(UserLogin(formData, setLoginLoading))\r\n  }\r\n  if(splash){\r\n    return (\r\n      <>\r\n        <SplashScreen/>\r\n      </>\r\n    )\r\n  }else{\r\n    return(\r\n      <div className='bg-light'>\r\n      <section className=\"container-fluid\">\r\n        <div className=\"row justify-content-center\">\r\n        <div className='auth card bg-white p-5 shadow-sm col-md-4'>\r\n          <form onSubmit={(e)=> processLogin(e)}>\r\n            <h4 className=\"text-center text-purple fw-bold\">Login</h4>\r\n            <span className=\"text-start mt-4 mb-3 fw-bold\">Hi, Welcome back!</span>\r\n            <div className=\"my-1\">\r\n              <label htmlFor=\"inputEmail\" className=\"form-text\">Email</label>\r\n              <input type=\"email\" className=\"form-control input-line\" id=\"inputEmail\" name=\"inputEmail\" onChange={(e) => {\r\n                  setFormData({ ...formData, email: e.target.value })\r\n              }} required />\r\n            </div>\r\n            <div className=\"my-1\">\r\n              <label htmlFor=\"inputPassword\" className=\"form-text\">Password</label>\r\n              <input type=\"password\" className=\"input-line form-control password\" name=\"inputPassword\" id=\"inputPassword\" onChange={(e) => {\r\n                  setFormData({ ...formData, password: e.target.value })\r\n              }}/>\r\n              <div className=\"btn-lg toogle-btn align-content-md-end\" name=\"toogle\">\r\n                {!show ? (\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + '/images/i_eye.svg'}\r\n                        onClick={() => setShow(true)}\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src={process.env.PUBLIC_URL + '/images/i_eye.svg'}\r\n                        onClick={() => setShow(false)}\r\n                      />\r\n                  )}\r\n              </div>\r\n            </div>\r\n            <Link to='./forgot_password' className='mb-3 text-purple'>\r\n              <span className='text-float-end'>Forgot Password ?</span>\r\n            </Link>\r\n            {loginLoading ? (\r\n              <Part.buttonPurple text='Loading...' disabled={loginLoading}  onClick={(e)=> processLogin(e)}/>\r\n            ):(\r\n              <Part.buttonPurple text='Login'  onClick={(e)=> processLogin(e)}/>\r\n            )}\r\n            \r\n          </form>\r\n          <span className=\"text-muted text-center label\">Login with</span>\r\n            <Part.buttonWhite text=' Google' image ={process.env.PUBLIC_URL + '/images/i_google.svg'}  />\r\n            <span className=\"mb-1 text-center\">Don't have account ?\r\n            <Link to='./register'  className='text-purple fw-bold'>\r\n              <span>Sign Up</span>\r\n            </Link>\r\n            </span>\r\n        </div>\r\n        </div>\r\n      </section>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Login","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\index.js",["162","163"],"import { List, Filter, Menu, Message } from \"./Component\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UserLogout } from \"../../../Redux/Actions/auth\";\r\n\r\nconst Chatlist = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    let component = document.getElementById(\"sidebar\");\r\n    if (visible) {\r\n      console.log(\"block\");\r\n      component.classList.add(\"d-block\");\r\n      component.classList.remove(\"d-none\");\r\n    } else {\r\n      console.log(\"none\");\r\n      component.classList.add(\"d-none\");\r\n      component.classList.remove(\"d-block\");\r\n    }\r\n  }, [visible]);\r\n\r\n  const signOut = () =>{\r\n\r\n  }\r\n\r\n  return (\r\n    <section className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <aside className=\"col-sm-5 d-block col-md-5 col-lg-3 px-4 bg-white position-relative\">\r\n          <div className=\"d-flex align-items-center mt-4 mb-3\">\r\n            <span className=\"text-purple flex-grow-1 text-start\" id=\"chatify\">\r\n              <h4>Chatify</h4>\r\n            </span>\r\n            <div className=\"ps-0 float-md-end\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/i_menu.svg\"}\r\n                alt=\"...\"\r\n                onClick={() => (visible ? setVisible(false) : setVisible(true))}\r\n              />\r\n            </div>\r\n            <div className='pt-5'>\r\n                <div className=\"position-absolute w-50 z-2 bg-purple\" id=\"sidebar\">\r\n                    <ul class=\"list-group border-0 float-start px-0\">\r\n                        <li className=\"list-group-item bg-purple text-white border-0\">Settings</li>\r\n                        <li className=\"list-group-item bg-purple text-white border-0\">Contacts</li>\r\n                        <li className=\"list-group-item bg-purple text-white border-0\">Calls</li>\r\n                        <li className=\"list-group-item bg-purple text-white border-0\">Invite Friends</li>\r\n                        <li className=\"list-group-item bg-purple text-white border-0\">Telegram FAQ</li>\r\n                        <li className=\"list-group-item bg-purple text-white border-0\" onClick={()=>dispatch(UserLogout())}>Sign Out</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            {/*  <Menu states={visible}/> */}\r\n          </div>\r\n          <div className=\"d-flex align-items-center m-1\">\r\n            <div className=\"input-group w-100 h-100\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/i_search.svg\"}\r\n                className=\"input-group-text search-box icon bg-light img-fluid\"\r\n                id=\"basic-addon1\"\r\n                alt=\"...\"\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control search-box field bg-light \"\r\n                placeholder=\"Type your message...\"\r\n                aria-label=\"Username\"\r\n                aria-describedby=\"basic-addon1\"\r\n              />\r\n            </div>\r\n            <div className=\"ms-3 float-md-end\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/images/i_plus.svg\"}\r\n                alt=\"...\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <Filter />\r\n          <List />\r\n        </aside>\r\n        <main className=\"d-none d-sm-block col-sm-7 col-md-7 col-lg-9 col-xs-9 p-0\">\r\n          <Message />\r\n        </main>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Chatlist;\r\n","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Public\\NotFound\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Public\\Register\\index.js",["164","165","166"],"import React,{useState} from 'react'\r\nimport Part from '../../../components/part'\r\nimport { Link} from 'react-router-dom'\r\nimport { UserRegister } from '../../../Redux/Actions/auth'\r\nimport { useDispatch} from 'react-redux'\r\n\r\nconst Register = () =>{\r\n    const formsData = new FormData()\r\n    const dispatch = useDispatch()\r\n    const [registerLoading, setRegisterLoading] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        username: '-',\r\n        email: '-',\r\n        password: '-'\r\n    })\r\n\r\n    const processRegister = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(UserRegister(formData, setRegisterLoading))\r\n    }\r\n\r\n    return(\r\n        <div className='bg-light'>\r\n        <section className=\"container-fluid\">\r\n            <div className=\"row justify-content-center\">\r\n                <form className=\"auth card bg-white p-5 shadow-sm col-md-4\" onSubmit={(e)=>processRegister(e)}>\r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                    <Link to=\"./Login\">\r\n                        <button className=\"ps-0 float-md-start btn-lg back-btn\"><img src={process.env.PUBLIC_URL + '/images/i_back.svg'}  alt=\"...\" /></button>\r\n                    </Link>\r\n                        <h4 className=\"flex-grow-1 text-center text-purple my-1 fw-bold\">Register</h4>\r\n                    </div>\r\n                    <span span className=\"text-start my-4 fw-bold\">Let’s create your account!</span>\r\n                    <div className=\"my-1\">\r\n                        <label htmlFor=\"exampleInputName\" className=\"form-text\">Name</label>\r\n                        <input type=\"text\" className=\"form-control input-line\" id=\"exampleInputName\" name=\"inputName\" aria-describedby=\"Name\" \r\n                        onChange={(e) => {setFormData({ ...formData, username: e.target.value })}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"my-1\">\r\n                        <label htmlFor=\"exampleInputEmail\" className=\"form-text\">Email</label>\r\n                        <input type=\"email\" className=\"form-control input-line\" id=\"exampleInputEmail\" name=\"inputEmail\" aria-describedby=\"Email\"\r\n                        onChange={(e) => {setFormData({ ...formData, email: e.target.value })}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"my-1\">\r\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-text\">Password</label>\r\n                        <input type=\"password\" className=\"form-control input-line password\" id=\"exampleInputPassword1\" name=\"inputPassword\" \r\n                        onChange={(e) => {setFormData({ ...formData, password: e.target.value })}}/>\r\n                        <button className=\"btn-lg toogle-btn align-content-md-end\" name=\"toogle\"><img src={process.env.PUBLIC_URL + '/images/i_eye.svg'}  alt=\"...\" /></button>\r\n                    </div>\r\n                    <div className=\"d-grid gap-2\">\r\n                        {registerLoading ? (\r\n                            <Part.buttonPurple text='Loading...' disabled={registerLoading} />\r\n                        ):(\r\n                            <Part.buttonPurple text='Register' onClick={(e)=> processRegister(e)}/>\r\n                        )}\r\n                    \r\n                        <div className=\"row my-3\">\r\n                           \r\n                            <div className=\"col-4 text-center\">\r\n                                <span className=\"text-muted text-sm\">Register with</span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                       \r\n                        <button className=\"btn btn-lg btn-outline-purple rounded-pill my-3 py-3 fw-bold\" type=\"button\" name=\"btn-google\"><img src={process.env.PUBLIC_URL + '/images/i_google.svg'}  alt=\"...\" /> Google</button>\r\n                     \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n\r\n","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Public\\ForgotPassword\\index.js",["167"],"import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Part from '../../../components/part'\r\n\r\nconst ForgotPassword = ()=>{\r\n    const history = useHistory()\r\n    const goBack = () =>{\r\n        history.goBack()\r\n    }\r\n    return(\r\n        <section className=\"container-fluid\">\r\n            <div className=\"row justify-content-center\">\r\n                <form className=\"auth card bg-white p-5 shadow-sm col-md-4\">\r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                        <button onClick={goBack} className=\"ps-0 float-md-start btn-lg back-btn\" title=\"login page\" type=\"button\" name=\"back\">\r\n                            <img src={process.env.PUBLIC_URL + '/images/i_back.svg'} alt=\"...\" />\r\n                        </button>\r\n                        <h4 className=\"flex-grow-1 text-center text-purple\">Forgot Password</h4>\r\n                    </div>\r\n                    <span className=\"my-4 fw-bold text-sm-start\">You’ll get messages soon on your e-mail</span>\r\n                    <div className=\"mb-5\">\r\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-text\">Email</label>\r\n                        <input type=\"email\" className=\"form-control input-line\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" name=\"email\" />\r\n                    </div>\r\n                    <div className=\"d-grid gap-2\">\r\n                    <button onClick={goBack} className=\"btn btn-lg btn-purple mb-1 rounded-pill my-3 py-3\" type=\"button\" name=\"send\">\r\n                        Send\r\n                    </button>\r\n                        <Part.buttonPurple text='Send'/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ForgotPassword","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Reducers\\users.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Reducers\\chatlist.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Reducers\\message.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\Route\\privateRoute.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\Route\\publicRoute.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\part.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Actions\\auth.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\Filter\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\Message\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\List\\index.js",["168","169","170","171"],"import { Link } from 'react-router-dom'\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ChatList} from '../../../../../Redux/Actions/chatlist';\r\nimport Moment from 'react-moment';\r\n\r\nconst { REACT_APP_API_IMAGE_URL } = process.env\r\nconst List = () =>{\r\n    const dispatch = useDispatch()\r\n    const { data:user } = useSelector((state)=> state.UserLogin)\r\n    React.useEffect(()=>{\r\n        dispatch(ChatList(user.data.token,user.data.id_user))\r\n    },[])\r\n    const { data:chatlist, error, loading } = useSelector((state) => state.ChatList)\r\n    return(\r\n        <div className=\"list mb-5\">\r\n            {\r\n                chatlist.data && \r\n                chatlist.data.map((element)=>(\r\n            <Link to={`/?id=${element.chatroom}`}  className='no-styling'>\r\n                <div className=\"d-flex flex-row row my-3 me-0 overflow-hidden\">\r\n                    <div className=\"col-3 col-md-3 col-lg-3\">\r\n                        <img src={`${REACT_APP_API_IMAGE_URL}${element.photo}`} className=\"photo\" alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"col-9 col-md-9 col-lg-9\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-8 col-lg-8\">\r\n                                <div className=\"d-flex flex-row\">\r\n                                    <span className=\"fw-bold text-lg-start\">{element.name ?? element.username} \r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-4 col-lg-4\">\r\n                                <div className=\"d-flex flex-column bd-highlight\">\r\n                                    <small className=\"text-muted mb-1\"><Moment fromNow ago>{element.message_timestamp}</Moment></small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"d-flex inline\">\r\n                                <div className=\"col-8 col-lg-8 mt-1\">\r\n                                    <div className=\"d-flex flex-row\">\r\n                                        {(element.status_message == 'unread') ? \r\n                                            <small className=\"text-purple text-sm-start\">\r\n                                                {element.message.substring(0, 7)}...\r\n                                            </small> \r\n                                        :   <small className=\"text-muted text-sm-start\">\r\n                                                {element.message.substring(0, 7)}...\r\n                                            </small>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4 col-lg-4\">\r\n                                    <div className=\"d-flex flex-row-reverse \">\r\n                                        <small className=\"text-white rounded-pill bg-purple float-end p-2\">{element.counting}</small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            )\r\n            )}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default List","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\Message\\startmessage.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\Message\\message.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194"],"import axios from 'axios'\r\nimport React,{useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ChatList,NewMessage } from '../../../../../Redux/Actions/chatlist';\r\nimport { GetMessage, SendMessage } from '../../../../../Redux/Actions/message'\r\nimport { GetInfoUser } from '../../../../../Redux/Actions/user'\r\nimport socket from '../../../../../helper/socket';\r\nimport io from 'socket.io-client'\r\n\r\nconst {REACT_APP_API_URL, REACT_APP_API_IMAGE_URL} = process.env\r\n\r\nconst Message = (props) =>{\r\n    let formData = new FormData();\r\n    const [loading, setLoading] = useState(false)\r\n    const [update, setUpdate] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const [data, setData] = useState({\r\n        message : '',\r\n        images : []\r\n    })\r\n\r\n\r\n    const { data:user } = useSelector((state)=> state.UserLogin)\r\n    const { data:chat } = useSelector((state) => state.GetMessage)\r\n    const { data:contact } = useSelector((state) => state.GetInfoUser)\r\n    socket.emit(\"join\", {userId : user.data.id_user, roomId : props.chatroom});\r\n    \r\n    socket.on(\"message\", (data)=>{\r\n        if(!update){\r\n            setUpdate(true);\r\n        }\r\n    })\r\n\r\n    React.useEffect(()=>{\r\n        dispatch(GetInfoUser(user.data.token,props.chatroom,user.data.id_user));\r\n        dispatch(GetMessage(user.data.token,props.chatroom,user.data.id_user));\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n        if(update){\r\n            setTimeout(() => {\r\n                dispatch(GetMessage(user.data.token,props.chatroom,user.data.id_user));\r\n              }, 1000);\r\n            setUpdate(false);\r\n        }\r\n    },[update])\r\n    const newFormData = () =>{\r\n        formData.append('message',data.message);\r\n        for(let i=0; i < data.images.length; i++){\r\n            formData.append('images',data.images[i])\r\n        }\r\n    }\r\n    const onDragOver = (e)=>{\r\n        e.preventDefault()\r\n        alert('kamu drag ini')\r\n    }\r\n    const handler = (event) => {\r\n        event.preventDefault()\r\n        if(data.message != null || data.images.length > 0){\r\n            newFormData()\r\n            dispatch(SendMessage(user.data.token,props.chatroom,user.data.id_user,formData))\r\n            socket.emit(\"send message\", {userId : user.data.id_user, roomId : props.chatroom})\r\n            setData({message : '',images : []})\r\n        }else{\r\n            return false\r\n        }\r\n    };\r\n    return(\r\n        <div className=\"head-list bg-white\">\r\n            <div className=\"head-list bg-white\">\r\n                {contact&&\r\n                    contact.map((item)=>(\r\n                    <div className=\"row m-0\">\r\n                    <div className=\"col-3 col-sm-3 col-md-2 col-lg-1 col-xl-1 mt-2 ms-2\">\r\n                        <img src={`${REACT_APP_API_IMAGE_URL}${item.photo}`} className=\"photo\" alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-7 col-md-8 col-lg-9 col-xl-10 mt-3\">\r\n                        <span className=\"fw-bold\">{item.name ?? item.username}</span><br />\r\n                        {(item.isonline == true)?<small className=\"text-purple\">Online</small>:<small className=\"text-muted\">Offline</small>}\r\n                    </div>\r\n                    <div className=\"col-auto col-sm-auto col-md-auto col-lg-auto col-xl-auto mt-4\">\r\n                        <img src={process.env.PUBLIC_URL + '/images/i_profile_menu.svg'}  alt=\"...\" />\r\n                    </div>\r\n                </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"list-message bg-light d-block\">\r\n                <div className=\"list-group p-3\">\r\n                    {chat &&\r\n                        chat.map((element)=>(\r\n                        (element.user1 == user.data.id_user)?\r\n                            (element.name_file != null)?\r\n                                (element.message == null || element.message == '')?\r\n                                    <div>\r\n                                        <div className=\"bg-light d-flex flex-row flex-row-reverse\">\r\n                                            <img src={`${REACT_APP_API_IMAGE_URL}${element.photo}`} className=\"photo-message\"/>\r\n                                            <img src={`${REACT_APP_API_IMAGE_URL}${element.name_file}`} className=\"d-flex align-items-end message-left ms-2\"/>\r\n                                        </div>\r\n                                    </div> \r\n                                :\r\n                                    <div>\r\n                                        <div className=\"bg-light d-flex flex-row flex-row-reverse\" id={element.id} onDrag={(e)=>onDragOver(e)} draggable>\r\n                                            <img src={`${REACT_APP_API_IMAGE_URL}${element.photo}`} className=\"d-flex align-items-end photo-message ms-2\"/>\r\n                                            <img src={`${REACT_APP_API_IMAGE_URL}${element.name_file}`} className=\"d-flex align-items-end message-right ms-2\"/>\r\n                                        </div>\r\n                                        <div className=\"bg-light d-flex flex-row flex-row-reverse\" id={element.id_detail}>\r\n                                            <p className='p-3 mx-5 float-end bg-white message-right text-purple'>{element.message}</p>\r\n                                        </div>\r\n                                    </div>   \r\n                            : \r\n                            <div className=\"bg-light d-flex flex-row flex-row-reverse\">\r\n                                <img src={`${REACT_APP_API_IMAGE_URL}${element.photo}`} className=\"d-flex align-items-end photo-message ms-2\"/>\r\n                                <p className='p-3 float-end bg-white message-right text-purple'>{element.message}</p>\r\n                            </div>\r\n                        : \r\n                            (element.name_file != null)?\r\n                                (element.message != null)?\r\n                                    <div>\r\n                                        <div className=\"bg-light d-flex flex-row\">\r\n                                            <img src={`${REACT_APP_API_IMAGE_URL}${element.photo}`} className=\"photo-message\"/>\r\n                                            <img src={`${REACT_APP_API_IMAGE_URL}${element.name_file}`} className=\"d-flex align-items-end message-left ms-2\"/>\r\n                                        </div>\r\n                                        <div className=\"bg-light bg-light d-flex flex-row\">\r\n                                            <p className='p-3 mx-5 float-start bg-purple message-left text-white'>{element.message}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                :   \r\n                                    <div>\r\n                                        <div className=\"bg-light d-flex flex-row\">\r\n                                            <img src={`${REACT_APP_API_IMAGE_URL}${element.photo}`} className=\"photo-message\"/>\r\n                                            <img src={`${REACT_APP_API_IMAGE_URL}${element.name_file}`} className=\"d-flex align-items-end message-left ms-2\"/>\r\n                                        </div>\r\n                                    </div>\r\n                            :\r\n                            <div className=\"bg-light bg-light d-flex flex-row\">\r\n                                <img src={`${REACT_APP_API_IMAGE_URL}${element.photo}`} className=\"photo-message me-2\"/>\r\n                                <p className='p-3 float-start bg-purple message-left text-white'>{element.message}</p>\r\n                            </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"footer-list bg-white d-block\">\r\n                <div className=\"position-relative input-group px-3\">\r\n                <form encType=\"multipart/form-data\" className=\"form-control search-box \" onSubmit={(e)=>handler(e)}>\r\n                <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control search-box icon bg-light \" placeholder=\"Type your message...\" aria-label=\"chat\" aria-describedby=\"basic-addon1\" value={data.message} onChange={(e) => setData({...data, message:e.target.value})}/>\r\n                    <label className=\"search-box input-group-text bg-light\">\r\n                        <input type=\"file\" name=\"picture\" accept=\"image\" multiple onChange={(e) => setData({...data, images:e.target.files})}/>\r\n                        <img src={process.env.PUBLIC_URL + '/images/i_plus.svg'}  className=\"img-fluid\" alt=\"...\" />\r\n                    </label>\r\n                    <div className=\"d-none d-sm-none d-md-block position-absolute col-lg-2 col-md-3 col-sm-4 col-8 g-2 bottom-0 end-0 pb-0 m-5 pe-5\">\r\n                        <div className=\"d-none shadow-sm p-3 bg-purple menu-panel-right align-middle mt-5 me-5\">\r\n                            <div className=\"list-group\">\r\n                                <div className=\"d-flex justify-content-start mb-1\">\r\n                                    <img src={process.env.PUBLIC_URL + '/images/i_image.svg'}  alt=\"...\" width=\"13px\" />\r\n                                    <smal className=\"text-white ms-2\">Image</smal>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-start mb-1\">\r\n                                    <img src={process.env.PUBLIC_URL + '/images/i_document.svg'}  alt=\"...\" width=\"13px\" />\r\n                                    <smal className=\"text-white ms-2\">Document</smal>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-start mb-1\">\r\n                                    <img src={process.env.PUBLIC_URL + '/images/i_contact.svg'}  alt=\"...\" width=\"13px\" />\r\n                                    <smal className=\"text-white ms-2\">Contact</smal>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-start mb-1\">\r\n                                    <img src={process.env.PUBLIC_URL + '/images/i_location.svg'}  alt=\"...\" width=\"13px\" />\r\n                                    <smal className=\"text-white ms-2\">Location</smal>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                   {/*  <button className=\"search-box input-group-text bg-light\" type=\"button\"><img src={process.env.PUBLIC_URL + '/images/i_plus.svg'}  className=\"img-fluid\" alt=\"...\" /></button> */}\r\n                    <button className=\"input-group-text search-box bg-light \" type=\"button\"><img src={process.env.PUBLIC_URL + '/images/i_emoticon.svg'}  className=\"img-fluid\" alt=\"...\" /></button>\r\n                    <button className=\"input-group-text search-box field bg-light \" type=\"button\"><img src={process.env.PUBLIC_URL + '/images/i_camera.svg'}  className=\"img-fluid\" alt=\"...\" /></button>\r\n                </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n export default Message","E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Actions\\chatlist.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Actions\\message.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\Redux\\Actions\\user.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\components\\SplashScreen\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\SideBar\\index.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\pages\\Private\\ChatLayout\\Component\\SideBar\\menu.js",[],"E:\\portofolio\\Project\\chatify\\chatify-react\\src\\helper\\socket.js",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":6,"column":42,"nodeType":"201","messageId":"202","endLine":6,"endColumn":54},{"ruleId":"199","severity":1,"message":"203","line":2,"column":46,"nodeType":"201","messageId":"202","endLine":2,"endColumn":56},{"ruleId":"199","severity":1,"message":"204","line":32,"column":11,"nodeType":"201","messageId":"202","endLine":32,"endColumn":15},{"ruleId":"199","severity":1,"message":"205","line":32,"column":16,"nodeType":"201","messageId":"202","endLine":32,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":66,"column":23,"nodeType":"208","endLine":69,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":71,"column":23,"nodeType":"208","endLine":74,"endColumn":25},{"ruleId":"209","severity":1,"message":"210","line":82,"column":15,"nodeType":"208","messageId":"211","endLine":82,"endColumn":110},{"ruleId":"209","severity":1,"message":"210","line":84,"column":15,"nodeType":"208","messageId":"211","endLine":84,"endColumn":81},{"ruleId":"209","severity":1,"message":"212","line":89,"column":13,"nodeType":"208","messageId":"211","endLine":89,"endColumn":106},{"ruleId":"199","severity":1,"message":"213","line":1,"column":24,"nodeType":"201","messageId":"202","endLine":1,"endColumn":28},{"ruleId":"199","severity":1,"message":"214","line":22,"column":9,"nodeType":"201","messageId":"202","endLine":22,"endColumn":16},{"ruleId":"199","severity":1,"message":"215","line":8,"column":11,"nodeType":"201","messageId":"202","endLine":8,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":54,"column":29,"nodeType":"208","messageId":"211","endLine":54,"endColumn":95},{"ruleId":"209","severity":1,"message":"210","line":56,"column":29,"nodeType":"208","messageId":"211","endLine":56,"endColumn":100},{"ruleId":"209","severity":1,"message":"210","line":29,"column":25,"nodeType":"208","messageId":"211","endLine":29,"endColumn":57},{"ruleId":"216","severity":1,"message":"217","line":13,"column":7,"nodeType":"218","endLine":13,"endColumn":9,"suggestions":"219"},{"ruleId":"199","severity":1,"message":"205","line":14,"column":28,"nodeType":"201","messageId":"202","endLine":14,"endColumn":33},{"ruleId":"199","severity":1,"message":"220","line":14,"column":35,"nodeType":"201","messageId":"202","endLine":14,"endColumn":42},{"ruleId":"221","severity":1,"message":"222","line":43,"column":66,"nodeType":"223","messageId":"224","endLine":43,"endColumn":68},{"ruleId":"199","severity":1,"message":"225","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":13},{"ruleId":"199","severity":1,"message":"226","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":19},{"ruleId":"199","severity":1,"message":"227","line":5,"column":10,"nodeType":"201","messageId":"202","endLine":5,"endColumn":18},{"ruleId":"199","severity":1,"message":"228","line":5,"column":19,"nodeType":"201","messageId":"202","endLine":5,"endColumn":29},{"ruleId":"199","severity":1,"message":"229","line":9,"column":8,"nodeType":"201","messageId":"202","endLine":9,"endColumn":10},{"ruleId":"199","severity":1,"message":"230","line":11,"column":8,"nodeType":"201","messageId":"202","endLine":11,"endColumn":25},{"ruleId":"199","severity":1,"message":"220","line":15,"column":12,"nodeType":"201","messageId":"202","endLine":15,"endColumn":19},{"ruleId":"199","severity":1,"message":"231","line":15,"column":21,"nodeType":"201","messageId":"202","endLine":15,"endColumn":31},{"ruleId":"216","severity":1,"message":"232","line":39,"column":7,"nodeType":"218","endLine":39,"endColumn":9,"suggestions":"233"},{"ruleId":"216","severity":1,"message":"232","line":48,"column":7,"nodeType":"218","endLine":48,"endColumn":15,"suggestions":"234"},{"ruleId":"221","severity":1,"message":"222","line":81,"column":41,"nodeType":"223","messageId":"224","endLine":81,"endColumn":43},{"ruleId":"221","severity":1,"message":"222","line":93,"column":40,"nodeType":"223","messageId":"224","endLine":93,"endColumn":42},{"ruleId":"221","severity":1,"message":"222","line":95,"column":77,"nodeType":"223","messageId":"224","endLine":95,"endColumn":79},{"ruleId":"206","severity":1,"message":"207","line":98,"column":45,"nodeType":"208","endLine":98,"endColumn":128},{"ruleId":"206","severity":1,"message":"207","line":99,"column":45,"nodeType":"208","endLine":99,"endColumn":159},{"ruleId":"206","severity":1,"message":"207","line":105,"column":45,"nodeType":"208","endLine":105,"endColumn":156},{"ruleId":"206","severity":1,"message":"207","line":106,"column":45,"nodeType":"208","endLine":106,"endColumn":160},{"ruleId":"206","severity":1,"message":"207","line":114,"column":33,"nodeType":"208","endLine":114,"endColumn":144},{"ruleId":"206","severity":1,"message":"207","line":122,"column":45,"nodeType":"208","endLine":122,"endColumn":128},{"ruleId":"206","severity":1,"message":"207","line":123,"column":45,"nodeType":"208","endLine":123,"endColumn":159},{"ruleId":"206","severity":1,"message":"207","line":132,"column":45,"nodeType":"208","endLine":132,"endColumn":128},{"ruleId":"206","severity":1,"message":"207","line":133,"column":45,"nodeType":"208","endLine":133,"endColumn":159},{"ruleId":"206","severity":1,"message":"207","line":138,"column":33,"nodeType":"208","endLine":138,"endColumn":121},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'SplashScreen' is defined but never used.","Identifier","unusedVar","'UserLogout' is defined but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component buttonPurple must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","Imported JSX component buttonWhite must be in PascalCase or SCREAMING_SNAKE_CASE","'Menu' is defined but never used.","'signOut' is assigned a value but never used.","'formsData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch', 'user.data.id_user', and 'user.data.token'. Either include them or remove the dependency array.","ArrayExpression",["237"],"'loading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'useParams' is defined but never used.","'ChatList' is defined but never used.","'NewMessage' is defined but never used.","'io' is defined but never used.","'REACT_APP_API_URL' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'props.chatroom', 'user.data.id_user', and 'user.data.token'. Either include them or remove the dependency array.",["238"],["239"],"no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [dispatch, user.data.id_user, user.data.token]",{"range":"246","text":"247"},"Update the dependencies array to be: [dispatch, props.chatroom, user.data.id_user, user.data.token]",{"range":"248","text":"249"},"Update the dependencies array to be: [dispatch, props.chatroom, update, user.data.id_user, user.data.token]",{"range":"250","text":"251"},[497,499],"[dispatch, user.data.id_user, user.data.token]",[1445,1447],"[dispatch, props.chatroom, user.data.id_user, user.data.token]",[1694,1702],"[dispatch, props.chatroom, update, user.data.id_user, user.data.token]"]