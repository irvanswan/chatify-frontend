{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAID\\\\Documents\\\\tugas\\\\pertemuan3\\\\chatify-react\\\\src\\\\pages\\\\private\\\\chat_layout\\\\component\\\\List\\\\lastMessage.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NewMessage } from '../../../../../Redux/Actions/chatlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_API_URL,\n  REACT_APP_API_IMAGE_URL\n} = process.env;\n\nlet LastMessage = props => {\n  _s();\n\n  let message = props.data;\n  const dispatch = useDispatch();\n  const {\n    data: user\n  } = useSelector(state => state.UserLogin);\n  const {\n    data: newMessage,\n    error,\n    loading\n  } = useSelector(state => state.NewMessage);\n  React.useEffect(() => {\n    dispatch(NewMessage(user.data.token, id_chatroom));\n  }, [props]);\n  React.useEffect(() => {\n    axios.get(`${REACT_APP_API_URL}chats/?id_chatroom=${id_chatroom}`, {\n      headers: {\n        'user-token': localStorage.getItem('userToken')\n      }\n    }).then(res => {\n      SetMessage(res.data.data);\n    }).catch(err => {\n      console.log(`ini error ${err}`);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: message.data && message.data.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-9 col-lg-9 mt-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row\",\n          children: element.status == 'unread' ? /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-purple text-sm-start\",\n            children: element.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 53\n          }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted text-sm-start\",\n            children: element.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 126\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3 col-lg-3 mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column bd-highlight\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LastMessage, \"nmbH4MhmCUeqz/OTtcPkJiuWxXA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = LastMessage;\nexport default LastMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LastMessage\");","map":{"version":3,"sources":["C:/Users/RAID/Documents/tugas/pertemuan3/chatify-react/src/pages/private/chat_layout/component/List/lastMessage.js"],"names":["axios","React","useState","useSelector","useDispatch","NewMessage","REACT_APP_API_URL","REACT_APP_API_IMAGE_URL","process","env","LastMessage","props","message","data","dispatch","user","state","UserLogin","newMessage","error","loading","useEffect","token","id_chatroom","get","headers","localStorage","getItem","then","res","SetMessage","catch","err","console","log","map","element","status"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,uCAA3B;;AACA,MAAM;AAACC,EAAAA,iBAAD;AAAoBC,EAAAA;AAApB,IAA+CC,OAAO,CAACC,GAA7D;;AAEA,IAAIC,WAAW,GAAIC,KAAD,IAAU;AAAA;;AACxB,MAAIC,OAAO,GAAGD,KAAK,CAACE,IAApB;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA,IAAI,EAACE;AAAP,MAAgBZ,WAAW,CAAEa,KAAD,IAAUA,KAAK,CAACC,SAAjB,CAAjC;AACA,QAAM;AAAEJ,IAAAA,IAAI,EAACK,UAAP;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,MAAuCjB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACX,UAAlB,CAAxD;AACAJ,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAI;AAChBP,IAAAA,QAAQ,CAACT,UAAU,CAACU,IAAI,CAACF,IAAL,CAAUS,KAAX,EAAiBC,WAAjB,CAAX,CAAR;AACH,GAFD,EAEE,CAACZ,KAAD,CAFF;AAGAV,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAI;AAChBrB,IAAAA,KAAK,CAACwB,GAAN,CAAW,GAAElB,iBAAkB,sBAAqBiB,WAAY,EAAhE,EAAkE;AAC9DE,MAAAA,OAAO,EAAE;AACL,sBAAcC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADT;AADqD,KAAlE,EAIGC,IAJH,CAISC,GAAD,IAAO;AACXC,MAAAA,UAAU,CAACD,GAAG,CAAChB,IAAJ,CAASA,IAAV,CAAV;AACH,KAND,EAMGkB,KANH,CAMUC,GAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYF,GAAI,EAA7B;AACH,KARD;AASH,GAVD;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACIpB,OAAO,CAACC,IAAR,IACAD,OAAO,CAACC,IAAR,CAAasB,GAAb,CAAkBC,OAAD,iBACrB;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBACMA,OAAO,CAACC,MAAR,IAAkB,QAAnB,gBAA+B;AAAO,YAAA,SAAS,EAAC,2BAAjB;AAAA,sBAA8CD,OAAO,CAACxB;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAA/B,gBAAwG;AAAO,YAAA,SAAS,EAAC,0BAAjB;AAAA,sBAA6CwB,OAAO,CAACxB;AAArD;AAAA;AAAA;AAAA;AAAA;AAD7G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAvCD;;GAAIF,W;UAEiBN,W,EACKD,W,EACuBA,W;;;KAJ7CO,W;AAyCJ,eAAeA,WAAf","sourcesContent":["import axios from 'axios'\r\nimport React,{useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NewMessage } from '../../../../../Redux/Actions/chatlist';\r\nconst {REACT_APP_API_URL, REACT_APP_API_IMAGE_URL} = process.env\r\n\r\nlet LastMessage = (props) =>{\r\n    let message = props.data\r\n    const dispatch = useDispatch()\r\n    const { data:user } = useSelector((state)=> state.UserLogin)\r\n    const { data:newMessage , error, loading } = useSelector((state) => state.NewMessage)\r\n    React.useEffect(()=>{\r\n        dispatch(NewMessage(user.data.token,id_chatroom))\r\n    },[props])\r\n    React.useEffect(()=>{\r\n        axios.get(`${REACT_APP_API_URL}chats/?id_chatroom=${id_chatroom}`,{\r\n            headers: {\r\n                'user-token': localStorage.getItem('userToken')\r\n            }\r\n        }).then((res)=>{\r\n            SetMessage(res.data.data)\r\n        }).catch((err)=>{\r\n            console.log(`ini error ${err}`)\r\n        })\r\n    })\r\n    return(\r\n        <div className=\"row\">\r\n        {   message.data &&\r\n            message.data.map((element)=>(\r\n        <div className=\"d-flex inline\">\r\n            <div className=\"col-9 col-lg-9 mt-1\">\r\n                <div className=\"d-flex flex-row\">\r\n                    {(element.status == 'unread') ? <small className=\"text-purple text-sm-start\">{element.message}</small> : <small className=\"text-muted text-sm-start\">{element.message}</small>}\r\n                </div>\r\n            </div>\r\n            <div className=\"col-3 col-lg-3 mt-2\">\r\n                <div className=\"d-flex flex-column bd-highlight\">\r\n                    3\r\n                </div>\r\n            </div>\r\n        </div>\r\n        ))\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LastMessage"]},"metadata":{},"sourceType":"module"}