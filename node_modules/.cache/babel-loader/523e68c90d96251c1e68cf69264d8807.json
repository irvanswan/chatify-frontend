{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport reducers from './Reducers';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['UserLogin']\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst configureStore = () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk, logger));\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n};\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/RAID/Documents/tugas/pertemuan3/chatify-react/src/Redux/store.js"],"names":["applyMiddleware","createStore","logger","persistStore","persistReducer","storage","thunk","reducers","persistConfig","key","whitelist","persistedReducer","configureStore","store","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAG,MADY;AAElBJ,EAAAA,OAFkB;AAGtBK,EAAAA,SAAS,EAAG,CAAC,WAAD;AAHU,CAAtB;AAMA,MAAMC,gBAAgB,GAAGP,cAAc,CAACI,aAAD,EAAgBD,QAAhB,CAAvC;;AAEA,MAAMK,cAAc,GAAG,MAAK;AACxB,MAAIC,KAAK,GAAGZ,WAAW,CAACU,gBAAD,EAAmBX,eAAe,CAACM,KAAD,EAAOJ,MAAP,CAAlC,CAAvB;AACA,MAAIY,SAAS,GAAGX,YAAY,CAACU,KAAD,CAA5B;AACA,SAAM;AAACA,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAN;AACH,CAJD;;AAMA,eAAeF,cAAf","sourcesContent":["import { applyMiddleware, createStore} from 'redux'\r\nimport logger from 'redux-logger'\r\nimport {persistStore, persistReducer} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport reducers from './Reducers'\r\n\r\nconst persistConfig = {\r\n    key : 'root',\r\n    storage,\r\nwhitelist : ['UserLogin']\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nconst configureStore = () =>{\r\n    let store = createStore(persistedReducer, applyMiddleware(thunk,logger))\r\n    let persistor = persistStore(store)\r\n    return{store, persistor}\r\n}\r\n\r\nexport default configureStore"]},"metadata":{},"sourceType":"module"}