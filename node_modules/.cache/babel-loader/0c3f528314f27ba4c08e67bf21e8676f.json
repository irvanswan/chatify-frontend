{"ast":null,"code":"import{applyMiddleware,createStore}from'redux';import logger from'redux-logger';import{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';import thunk from'redux-thunk';import reducers from'./Reducers';var persistConfig={key:'root',storage:storage,whitelist:['UserLogin']};var persistedReducer=persistReducer(persistConfig,reducers);var configureStore=function configureStore(){var store=createStore(persistedReducer,applyMiddleware(thunk,logger));var persistor=persistStore(store);return{store:store,persistor:persistor};};export default configureStore;","map":{"version":3,"sources":["E:/portofolio/Project/chatify/chatify-react/src/Redux/store.js"],"names":["applyMiddleware","createStore","logger","persistStore","persistReducer","storage","thunk","reducers","persistConfig","key","whitelist","persistedReducer","configureStore","store","persistor"],"mappings":"AAAA,OAAQA,eAAR,CAAwBC,WAAxB,KAA0C,OAA1C,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAAQC,YAAR,CAAsBC,cAAtB,KAA2C,eAA3C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,GAAG,CAAG,MADY,CAElBJ,OAAO,CAAPA,OAFkB,CAGlBK,SAAS,CAAG,CAAC,WAAD,CAHM,CAAtB,CAMA,GAAMC,CAAAA,gBAAgB,CAAGP,cAAc,CAACI,aAAD,CAAgBD,QAAhB,CAAvC,CAEA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAK,CACxB,GAAIC,CAAAA,KAAK,CAAGZ,WAAW,CAACU,gBAAD,CAAmBX,eAAe,CAACM,KAAD,CAAOJ,MAAP,CAAlC,CAAvB,CACA,GAAIY,CAAAA,SAAS,CAAGX,YAAY,CAACU,KAAD,CAA5B,CACA,MAAM,CAACA,KAAK,CAALA,KAAD,CAAQC,SAAS,CAATA,SAAR,CAAN,CACH,CAJD,CAMA,cAAeF,CAAAA,cAAf","sourcesContent":["import {applyMiddleware,createStore} from 'redux'\r\nimport logger from 'redux-logger'\r\nimport {persistStore, persistReducer} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport reducers from './Reducers'\r\n\r\nconst persistConfig = {\r\n    key : 'root',\r\n    storage,\r\n    whitelist : ['UserLogin']\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nconst configureStore = () =>{\r\n    let store = createStore(persistedReducer, applyMiddleware(thunk,logger))\r\n    let persistor = persistStore(store)\r\n    return{store, persistor}\r\n}\r\n\r\nexport default configureStore"]},"metadata":{},"sourceType":"module"}